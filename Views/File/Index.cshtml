@using System.Linq
@model IEnumerable<FileManagementSystem.Models.FileViewModel>

@{
    ViewData["Title"] = "My Files";
    var breadcrumbs = ViewBag.Breadcrumbs as List<FileManagementSystem.Models.FolderModel>;
}

<div class="container mb-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div class="d-flex align-items-center gap-3">
            <h2 class="mb-0">
                <i class="bi bi-folder"></i> @(ViewBag.SelectedUser != null ? $"Files from {ViewBag.SelectedUser}" : "All Files")
            </h2>
            @if (ViewBag.SelectedUser != null)
            {
                <a asp-controller="File" asp-action="Index" class="btn btn-outline-primary">
                    <i class="bi bi-files"></i> View All Files
                </a>
            }
        </div>
        <div class="d-flex align-items-center gap-2 ms-auto">
            <a asp-controller="File" asp-action="Upload" asp-route-folderId="@ViewBag.CurrentFolderId" class="btn btn-primary">
                <i class="bi bi-cloud-upload"></i> Upload New File
            </a>
            <a asp-controller="Labels" asp-action="Index" class="btn btn-outline-secondary">
                <i class="bi bi-tags"></i> Manage Labels
            </a>
        </div>
    </div>

    <!-- Search and Filter Section -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <form asp-controller="File" asp-action="Search" method="get" class="row g-3">
                <div class="col-md-6">
                    <div class="input-group">
                        <input type="text" name="searchTerm" class="form-control" placeholder="Search files..." value="@ViewBag.SearchTerm" />
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-search"></i> Search
                        </button>
                        @if (!string.IsNullOrEmpty(ViewBag.SearchTerm) || ViewBag.SelectedLabelId != null)
                        {
                            <a href="@Url.Action("Index", "File")" class="btn btn-outline-secondary">
                                <i class="bi bi-x-circle"></i> Clear
                            </a>
                        }
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="input-group">
                        <select class="form-select" name="labelId">
                            <option value="">All Labels</option>
                            @if (ViewBag.Labels != null)
                            {
                                @foreach (var label in ViewBag.Labels)
                                {
                                    <option value="@label.Id" selected="@(ViewBag.SelectedLabelId != null && ViewBag.SelectedLabelId == label.Id)">@label.Name</option>
                                }
                            }
                        </select>
                        <button type="submit" class="btn btn-outline-secondary">
                            <i class="bi bi-funnel"></i> Filter
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Folder Breadcrumbs -->
    <nav aria-label="breadcrumb" class="mb-3">
        <ol class="breadcrumb">
            <li class="breadcrumb-item @(ViewBag.CurrentFolderId == null ? "active" : "")">
                <a asp-action="Index" class="@(ViewBag.CurrentFolderId == null ? "text-muted" : "")">
                    <i class="bi bi-house"></i> Root
                </a>
            </li>
            @if (breadcrumbs != null && breadcrumbs.Any())
            {
                @for (int i = 0; i < breadcrumbs.Count; i++)
                {
                    var crumb = breadcrumbs[i];
                    if (i != breadcrumbs.Count - 1)
                    {
                        <li class="breadcrumb-item">
                            <a asp-action="Index" asp-route-folderId="@crumb.Id">@crumb.Name</a>
                        </li>
                    }
                    else
                    {
                        <li class="breadcrumb-item active" aria-current="page">@crumb.Name</li>
                    }
                }
            }
        </ol>
    </nav>

    <!-- Create Folder Form -->
    <div class="mb-4">
        <form asp-action="CreateFolder" method="post" class="d-flex gap-2 align-items-center">
            <input type="hidden" name="parentFolderId" value="@ViewBag.CurrentFolderId" />
            <input type="text" name="folderName" class="form-control" placeholder="New folder name..." required style="max-width: 250px;" />
            <button type="submit" class="btn btn-outline-primary"><i class="bi bi-folder-plus"></i> Create Folder</button>
        </form>
    </div>

    <!-- Folders Section -->
    @if (ViewBag.Folders != null && ((IEnumerable<dynamic>)ViewBag.Folders).Any())
    {
        <div class="mb-4">
            <h4 class="mb-3"><i class="bi bi-folder-fill text-warning"></i> Folders</h4>
            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
                @foreach (var folder in ViewBag.Folders)
                {
                    <div class="col">
                        <div class="card h-100 shadow border-0 rounded-4 bg-light">
                            <div class="card-body d-flex flex-column justify-content-center align-items-center" style="min-height: 120px;">
                                <a asp-action="Index" asp-route-folderId="@folder.Id" class="text-decoration-none text-dark text-center">
                                    <i class="bi bi-folder-fill display-4 text-warning"></i>
                                    <div class="fw-semibold mt-2">@folder.Name</div>
                                </a>
                                <div class="mt-3 d-flex gap-1 justify-content-center">
                                    <div class="btn-group w-100 gap-1" role="group">
                                        <button class="btn rounded-pill px-2 py-1 small text-dark" type="button" onclick="showRenameForm(@folder.Id, '@folder.Name')" data-bs-toggle="tooltip" title="Rename Folder" style="background: none; border: none;">
                                            <i class="bi bi-pencil"></i> <span class="d-none d-xl-inline">Rename</span>
                                        </button>
                                        <button class="btn rounded-pill px-2 py-1 small text-dark" type="button" onclick="openMoveFolderModal(@folder.Id)" data-bs-toggle="tooltip" title="Move Folder" style="background: none; border: none;">
                                            <i class="bi bi-arrow-left-right"></i> <span class="d-none d-xl-inline">Move</span>
                                        </button>
                                        <form asp-action="DeleteFolder" method="post" onsubmit="return confirm('Are you sure you want to delete this folder?');" style="display:inline;">
                                            <input type="hidden" name="id" value="@folder.Id" />
                                            <button type="submit" class="btn rounded-pill px-2 py-1 small text-dark" data-bs-toggle="tooltip" title="Delete Folder" style="background: none; border: none;">
                                                <i class="bi bi-trash"></i> <span class="d-none d-xl-inline">Delete</span>
                                            </button>
                                        </form>
                                    </div>
                                </div>
                                <!-- Inline Rename Form (hidden by default) -->
                                <form asp-action="RenameFolder" method="post" class="mt-2 d-none" id="rename-form-@folder.Id">
                                    <input type="hidden" name="id" value="@folder.Id" />
                                    <div class="input-group input-group-sm">
                                        <input type="text" name="newName" class="form-control" value="@folder.Name" required />
                                        <button type="submit" class="btn btn-primary"><i class="bi bi-check"></i></button>
                                        <button type="button" class="btn btn-secondary" onclick="hideRenameForm(@folder.Id)"><i class="bi bi-x"></i></button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }

    <!-- Files Section -->
    <div class="mb-4 position-relative">
        <h4 class="mb-3 d-flex align-items-center"><i class="bi bi-file-earmark-text text-primary"></i> Files
            <div class="form-check ms-4">
                <input class="form-check-input" type="checkbox" id="select-all-files" style="width:1.2em; height:1.2em;">
                <label class="form-check-label small" for="select-all-files">Select All</label>
            </div>
        </h4>
        <!-- Bulk Action Bar -->
        <form id="bulk-action-form" method="post" style="display:none;">
            <input type="hidden" name="actionType" id="bulk-action-type" />
            <div id="bulk-file-ids"></div>
        </form>
        <div id="bulk-action-bar" class="position-sticky top-0 bg-white shadow-sm py-2 px-3 mb-3 d-none" style="z-index: 10; border-radius: 0.5rem;">
            <span id="selected-count" class="fw-semibold"></span>
            <button class="btn btn-danger btn-sm ms-2" id="bulk-delete" disabled><i class="bi bi-trash"></i> Delete</button>
            <button class="btn btn-info btn-sm ms-2 text-white" id="bulk-move" disabled><i class="bi bi-arrow-left-right"></i> Move</button>
            <button class="btn btn-success btn-sm ms-2" id="bulk-download" disabled><i class="bi bi-download"></i> Download</button>
        </div>
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var file in Model)
            {
                <div class="col">
                    <div class="card h-100 shadow border-0 rounded-4 position-relative">
                        <div class="card-header bg-white border-0 rounded-top-4 position-relative" style="padding: 1rem 1.25rem 0.75rem 1.25rem; min-height: 60px;">
                            <div class="d-flex justify-content-between align-items-start">
                                <div class="flex-grow-1 me-2 d-flex align-items-center gap-2">
                                    <input type="checkbox" class="form-check-input file-select" data-file-id="@file.Id" style="width: 1.2em; height: 1.2em;" />
                                    <h6 class="card-title mb-0 text-truncate fw-semibold" title="@file.FileName" style="font-size: 1.1rem;">
                                        <i class="bi @(file.FileType == "image" ? "bi-image" : 
                                                    file.FileType == "document" ? "bi-file-earmark-text" : 
                                                    file.FileType == "pdf" ? "bi-file-pdf" : 
                                                    file.FileType == "video" ? "bi-file-play" : 
                                                    file.FileType == "audio" ? "bi-file-music" : "bi-file") text-secondary me-1"></i>
                                        @file.FileName
                                    </h6>
                                </div>
                                <div class="btn-group w-auto shadow-sm rounded-3 overflow-hidden" role="group" aria-label="File actions" style="background: #f8f9fa;">
                                    <a class="btn btn-outline-primary border-0" asp-action="Preview" asp-route-id="@file.Id" title="Preview" data-bs-toggle="tooltip">
                                        <i class="bi bi-eye"></i>
                                    </a>
                                    <a class="btn btn-outline-success border-0" asp-action="Download" asp-route-id="@file.Id" title="Download" data-bs-toggle="tooltip">
                                        <i class="bi bi-download"></i>
                                    </a>
                                    <button type="button" class="btn btn-outline-info border-0" onclick="openMoveFileModal(@file.Id)" title="Move File" data-bs-toggle="tooltip">
                                        <i class="bi bi-arrow-left-right"></i>
                                    </button>
                                    <button type="button" class="btn btn-outline-danger border-0" onclick="openDeleteFileModal(@file.Id, '@file.FileName')" title="Delete" data-bs-toggle="tooltip">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="card-body pt-3 pb-4 px-4">
                            <div class="mb-2">
                                <small class="text-muted">
                                    <i class="bi bi-calendar"></i> Uploaded: @file.UploadDate.ToString("MMM dd, yyyy")
                                </small>
                            </div>
                            <div class="mb-2">
                                <small class="text-muted">
                                    <i class="bi bi-hdd"></i> Size: @(file.FileSize / 1024) KB
                                </small>
                            </div>
                            <div class="mb-2">
                                <small class="text-muted">
                                    <i class="bi bi-folder"></i> Location: 
                                    @if (file.FolderId == null)
                                    {
                                        <span class="text-primary">Root</span>
                                    }
                                    else
                                    {
                                        <span class="text-primary">@file.FolderName</span>
                                    }
                                </small>
                            </div>
                            @if (file.Labels != null && file.Labels.Any())
                            {
                                <div class="mt-2">
                                    @foreach (var label in file.Labels)
                                    {
                                        <span class="badge bg-primary me-1">@label</span>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="text-center py-5">
            <i class="bi bi-folder-x display-1 text-muted"></i>
            <h3 class="mt-3">No Files Found</h3>
            <p class="text-muted">Upload your first file to get started!</p>
            <a asp-controller="File" asp-action="Upload" asp-route-folderId="@ViewBag.CurrentFolderId" class="btn btn-primary">
                <i class="bi bi-cloud-upload"></i> Upload File
            </a>
        </div>
    }
</div>

<!-- Move Modals -->

@section Scripts {
    <script>
        // Initialize tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })

        // Folder rename form logic
        function showRenameForm(folderId, folderName) {
            document.getElementById('rename-form-' + folderId).classList.remove('d-none');
        }
        function hideRenameForm(folderId) {
            document.getElementById('rename-form-' + folderId).classList.add('d-none');
        }

        // Move File Modal logic
        function openMoveFileModal(fileId) {
            fetch('/File/MoveFile/' + fileId)
                .then(response => response.text())
                .then(html => {
                    document.body.insertAdjacentHTML('beforeend', html);
                    var modal = new bootstrap.Modal(document.getElementById('moveFileModal'));
                    modal.show();
                    document.getElementById('moveFileModal').addEventListener('hidden.bs.modal', function () {
                        document.getElementById('moveFileModal').remove();
                    });
                });
        }
        // Move Folder Modal logic
        function openMoveFolderModal(folderId) {
            fetch('/File/MoveFolder/' + folderId)
                .then(response => response.text())
                .then(html => {
                    document.body.insertAdjacentHTML('beforeend', html);
                    var modal = new bootstrap.Modal(document.getElementById('moveFolderModal'));
                    modal.show();
                    document.getElementById('moveFolderModal').addEventListener('hidden.bs.modal', function () {
                        document.getElementById('moveFolderModal').remove();
                    });
                });
        }
        // Multi-select logic
        const fileCheckboxes = document.querySelectorAll('.file-select');
        const bulkBar = document.getElementById('bulk-action-bar');
        const selectedCount = document.getElementById('selected-count');
        const bulkDelete = document.getElementById('bulk-delete');
        const bulkMove = document.getElementById('bulk-move');
        const bulkDownload = document.getElementById('bulk-download');
        let selectedFiles = [];
        fileCheckboxes.forEach(cb => {
            cb.addEventListener('change', function() {
                const fileId = this.getAttribute('data-file-id');
                if (this.checked) {
                    selectedFiles.push(fileId);
                } else {
                    selectedFiles = selectedFiles.filter(id => id !== fileId);
                }
                updateBulkBar();
            });
        });
        function updateBulkBar() {
            if (selectedFiles.length > 0) {
                bulkBar.classList.remove('d-none');
                selectedCount.textContent = selectedFiles.length + ' file(s) selected';
                bulkDelete.disabled = false;
                bulkMove.disabled = false;
                bulkDownload.disabled = false;
            } else {
                bulkBar.classList.add('d-none');
                bulkDelete.disabled = true;
                bulkMove.disabled = true;
                bulkDownload.disabled = true;
            }
        }
        // Select All logic
        const selectAll = document.getElementById('select-all-files');
        selectAll.addEventListener('change', function() {
            fileCheckboxes.forEach(cb => {
                cb.checked = selectAll.checked;
                cb.dispatchEvent(new Event('change'));
            });
        });
        // Bulk action form logic
        function submitBulkAction(actionType) {
            document.getElementById('bulk-action-type').value = actionType;
            const idsDiv = document.getElementById('bulk-file-ids');
            idsDiv.innerHTML = '';
            selectedFiles.forEach(id => {
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'fileIds';
                input.value = id;
                idsDiv.appendChild(input);
            });
            const form = document.getElementById('bulk-action-form');
            form.action = actionType === 'Delete' ? '/File/BulkDelete' :
                          actionType === 'Move' ? '/File/BulkMove' :
                          actionType === 'Download' ? '/File/BulkDownload' : '#';
            form.method = actionType === 'Download' ? 'get' : 'post';
            form.submit();
        }
        bulkDelete.addEventListener('click', function(e) {
            e.preventDefault();
            submitBulkAction('Delete');
        });
        bulkMove.addEventListener('click', function(e) {
            e.preventDefault();
            // Show modal for move operation
            fetch('/File/BulkMove', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: selectedFiles.map(id => `fileIds=${id}`).join('&')
            })
            .then(response => response.text())
            .then(html => {
                // Remove any existing modal
                const existingModal = document.getElementById('bulkMoveModal');
                if (existingModal) {
                    existingModal.remove();
                }
                // Add the new modal
                document.body.insertAdjacentHTML('beforeend', html);
                var modal = new bootstrap.Modal(document.getElementById('bulkMoveModal'));
                modal.show();
                document.getElementById('bulkMoveModal').addEventListener('hidden.bs.modal', function () {
                    this.remove();
                });
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Failed to show move dialog. Please try again.');
            });
        });
        bulkDownload.addEventListener('click', function(e) {
            e.preventDefault();
            submitBulkAction('Download');
        });

        // Delete File Modal logic
        function openDeleteFileModal(fileId, fileName) {
            const modalHtml = `
                <div class="modal fade" id="deleteFileModal" tabindex="-1" aria-labelledby="deleteFileModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="deleteFileModalLabel">Confirm Delete</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <p>Are you sure you want to delete the file "<strong>${fileName}</strong>"?</p>
                                <p class="text-danger mb-0"><i class="bi bi-exclamation-triangle-fill"></i> This action cannot be undone.</p>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <form action="/File/Delete" method="post" style="display:inline;">
                                    <input type="hidden" name="id" value="${fileId}" />
                                    <button type="submit" class="btn btn-danger">Delete</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>`;

            // Remove any existing modal
            const existingModal = document.getElementById('deleteFileModal');
            if (existingModal) {
                existingModal.remove();
            }

            // Add the new modal to the body
            document.body.insertAdjacentHTML('beforeend', modalHtml);

            // Show the modal
            const modal = new bootstrap.Modal(document.getElementById('deleteFileModal'));
            modal.show();

            // Remove the modal from DOM when hidden
            document.getElementById('deleteFileModal').addEventListener('hidden.bs.modal', function () {
                this.remove();
            });
        }
    </script>
    <style>
    .btn[style*="background: none"]:hover {
        background: #f2f2f2 !important;
        color: #212529 !important;
    }
    </style>
}
