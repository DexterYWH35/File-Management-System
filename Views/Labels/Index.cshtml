@model IEnumerable<FileManagementSystem.Models.Label>

@{
    ViewData["Title"] = "Labels";
}

<div class="container mt-4">
    <h1>Labels</h1>

    <div class="row mb-4">
        <div class="col-md-6">
            <div class="input-group">
                <input type="text" id="newLabelName" class="form-control" placeholder="New label name">
                <button class="btn btn-primary" onclick="createLabel()">Create Label</button>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Your Labels</h5>
                </div>
                <div class="card-body">
                    <div id="labelsList" class="list-group">
                        @foreach (var label in Model)
                        {
                            <div class="list-group-item d-flex justify-content-between align-items-center" data-label-id="@label.Id">
                                <span>@label.Name</span>
                                <div>
                                    <button class="btn btn-sm btn-outline-danger" onclick="deleteLabel(@label.Id)">Delete</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function createLabel() {
            const name = document.getElementById('newLabelName').value.trim();
            if (!name) return;

            fetch('/Labels/Create', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: `name=${encodeURIComponent(name)}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.id) {
                    const labelsList = document.getElementById('labelsList');
                    const newLabel = document.createElement('div');
                    newLabel.className = 'list-group-item d-flex justify-content-between align-items-center';
                    newLabel.setAttribute('data-label-id', data.id);
                    newLabel.innerHTML = `
                        <span>${data.name}</span>
                        <div>
                            <button class="btn btn-sm btn-outline-danger" onclick="deleteLabel(${data.id})">Delete</button>
                        </div>
                    `;
                    labelsList.appendChild(newLabel);
                    document.getElementById('newLabelName').value = '';
                }
            });
        }

        function deleteLabel(labelId) {
            if (!confirm('Are you sure you want to delete this label?')) return;

            fetch(`/Labels/Delete/${labelId}`, {
                method: 'POST'
            })
            .then(response => {
                if (response.ok) {
                    const labelElement = document.querySelector(`[data-label-id="${labelId}"]`);
                    if (labelElement) {
                        labelElement.remove();
                    }
                }
            });
        }
    </script>
} 